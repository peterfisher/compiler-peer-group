# Generated from /Users/npohilets/compiler-peer-group/zeampl/parser/Zeampl.g4 by ANTLR 4.5.3
from antlr4 import *
from io import StringIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2>")
        buf.write("\u017d\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\3\2\3\2\3\2\3\2\3")
        buf.write("\3\3\3\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6")
        buf.write("\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13\3")
        buf.write("\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f")
        buf.write("\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3")
        buf.write("\20\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\24")
        buf.write("\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27")
        buf.write("\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33")
        buf.write("\3\33\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\36\3\36")
        buf.write("\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3!\3!\3")
        buf.write("!\3!\3!\3!\3\"\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3$\3$\3$")
        buf.write("\3$\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3&\3&\3\'\3")
        buf.write("\'\3\'\3(\3(\3(\3)\3)\3*\3*\3+\3+\3+\3,\3,\3,\3-\3-\3")
        buf.write(".\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63\3\64")
        buf.write("\3\64\3\65\3\65\3\65\3\66\3\66\3\66\3\67\3\67\38\38\3")
        buf.write("9\39\39\39\39\39\39\39\39\59\u0144\n9\3:\3:\7:\u0148\n")
        buf.write(":\f:\16:\u014b\13:\3;\6;\u014e\n;\r;\16;\u014f\3<\3<\3")
        buf.write("<\3=\3=\3=\3=\7=\u0159\n=\f=\16=\u015c\13=\3>\3>\3>\3")
        buf.write(">\3>\3>\3>\3>\3>\3>\3>\3>\3>\3>\3>\3>\3>\3>\3>\3>\3>\5")
        buf.write(">\u0173\n>\3?\3?\3@\6@\u0178\n@\r@\16@\u0179\3@\3@\2\2")
        buf.write("A\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31")
        buf.write("\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31")
        buf.write("\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O")
        buf.write(")Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;")
        buf.write("u<w=y\2{\2}\2\177>\3\2\b\5\2C\\aac|\6\2\62;C\\aac|\6\2")
        buf.write("\f\f\17\17$$^^\13\2$$))^^cdhhppttvvxx\5\2\62;CHch\4\2")
        buf.write("\13\f\"\"\u0182\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2")
        buf.write("\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21")
        buf.write("\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3")
        buf.write("\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2")
        buf.write("\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2")
        buf.write("\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2")
        buf.write("\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2")
        buf.write("\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3")
        buf.write("\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q")
        buf.write("\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2")
        buf.write("[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2")
        buf.write("\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2")
        buf.write("\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2")
        buf.write("\2\2\2\177\3\2\2\2\3\u0081\3\2\2\2\5\u0085\3\2\2\2\7\u0087")
        buf.write("\3\2\2\2\t\u0089\3\2\2\2\13\u008e\3\2\2\2\r\u0093\3\2")
        buf.write("\2\2\17\u0095\3\2\2\2\21\u0097\3\2\2\2\23\u0099\3\2\2")
        buf.write("\2\25\u009c\3\2\2\2\27\u00a6\3\2\2\2\31\u00ac\3\2\2\2")
        buf.write("\33\u00ae\3\2\2\2\35\u00b0\3\2\2\2\37\u00b4\3\2\2\2!\u00b9")
        buf.write("\3\2\2\2#\u00bb\3\2\2\2%\u00bd\3\2\2\2\'\u00c0\3\2\2\2")
        buf.write(")\u00c3\3\2\2\2+\u00c6\3\2\2\2-\u00c9\3\2\2\2/\u00cc\3")
        buf.write("\2\2\2\61\u00cf\3\2\2\2\63\u00d2\3\2\2\2\65\u00d5\3\2")
        buf.write("\2\2\67\u00d8\3\2\2\29\u00dc\3\2\2\2;\u00e0\3\2\2\2=\u00e3")
        buf.write("\3\2\2\2?\u00e8\3\2\2\2A\u00ed\3\2\2\2C\u00f3\3\2\2\2")
        buf.write("E\u00f7\3\2\2\2G\u00fa\3\2\2\2I\u0101\3\2\2\2K\u0107\3")
        buf.write("\2\2\2M\u0110\3\2\2\2O\u0113\3\2\2\2Q\u0116\3\2\2\2S\u0118")
        buf.write("\3\2\2\2U\u011a\3\2\2\2W\u011d\3\2\2\2Y\u0120\3\2\2\2")
        buf.write("[\u0122\3\2\2\2]\u0124\3\2\2\2_\u0126\3\2\2\2a\u0128\3")
        buf.write("\2\2\2c\u012a\3\2\2\2e\u012c\3\2\2\2g\u012e\3\2\2\2i\u0130")
        buf.write("\3\2\2\2k\u0133\3\2\2\2m\u0136\3\2\2\2o\u0138\3\2\2\2")
        buf.write("q\u0143\3\2\2\2s\u0145\3\2\2\2u\u014d\3\2\2\2w\u0151\3")
        buf.write("\2\2\2y\u0154\3\2\2\2{\u0172\3\2\2\2}\u0174\3\2\2\2\177")
        buf.write("\u0177\3\2\2\2\u0081\u0082\7x\2\2\u0082\u0083\7c\2\2\u0083")
        buf.write("\u0084\7t\2\2\u0084\4\3\2\2\2\u0085\u0086\7?\2\2\u0086")
        buf.write("\6\3\2\2\2\u0087\u0088\7=\2\2\u0088\b\3\2\2\2\u0089\u008a")
        buf.write("\7h\2\2\u008a\u008b\7w\2\2\u008b\u008c\7p\2\2\u008c\u008d")
        buf.write("\7e\2\2\u008d\n\3\2\2\2\u008e\u008f\7k\2\2\u008f\u0090")
        buf.write("\7p\2\2\u0090\u0091\7k\2\2\u0091\u0092\7v\2\2\u0092\f")
        buf.write("\3\2\2\2\u0093\u0094\7*\2\2\u0094\16\3\2\2\2\u0095\u0096")
        buf.write("\7+\2\2\u0096\20\3\2\2\2\u0097\u0098\7.\2\2\u0098\22\3")
        buf.write("\2\2\2\u0099\u009a\7K\2\2\u009a\u009b\7F\2\2\u009b\24")
        buf.write("\3\2\2\2\u009c\u009d\7v\2\2\u009d\u009e\7{\2\2\u009e\u009f")
        buf.write("\7r\2\2\u009f\u00a0\7g\2\2\u00a0\u00a1\7a\2\2\u00a1\u00a2")
        buf.write("\7g\2\2\u00a2\u00a3\7z\2\2\u00a3\u00a4\7r\2\2\u00a4\u00a5")
        buf.write("\7t\2\2\u00a5\26\3\2\2\2\u00a6\u00a7\7e\2\2\u00a7\u00a8")
        buf.write("\7n\2\2\u00a8\u00a9\7c\2\2\u00a9\u00aa\7u\2\2\u00aa\u00ab")
        buf.write("\7u\2\2\u00ab\30\3\2\2\2\u00ac\u00ad\7}\2\2\u00ad\32\3")
        buf.write("\2\2\2\u00ae\u00af\7\177\2\2\u00af\34\3\2\2\2\u00b0\u00b1")
        buf.write("\7k\2\2\u00b1\u00b2\7p\2\2\u00b2\u00b3\7v\2\2\u00b3\36")
        buf.write("\3\2\2\2\u00b4\u00b5\7d\2\2\u00b5\u00b6\7q\2\2\u00b6\u00b7")
        buf.write("\7q\2\2\u00b7\u00b8\7n\2\2\u00b8 \3\2\2\2\u00b9\u00ba")
        buf.write("\7]\2\2\u00ba\"\3\2\2\2\u00bb\u00bc\7_\2\2\u00bc$\3\2")
        buf.write("\2\2\u00bd\u00be\7-\2\2\u00be\u00bf\7?\2\2\u00bf&\3\2")
        buf.write("\2\2\u00c0\u00c1\7/\2\2\u00c1\u00c2\7?\2\2\u00c2(\3\2")
        buf.write("\2\2\u00c3\u00c4\7\u0080\2\2\u00c4\u00c5\7?\2\2\u00c5")
        buf.write("*\3\2\2\2\u00c6\u00c7\7,\2\2\u00c7\u00c8\7?\2\2\u00c8")
        buf.write(",\3\2\2\2\u00c9\u00ca\7\61\2\2\u00ca\u00cb\7?\2\2\u00cb")
        buf.write(".\3\2\2\2\u00cc\u00cd\7\'\2\2\u00cd\u00ce\7?\2\2\u00ce")
        buf.write("\60\3\2\2\2\u00cf\u00d0\7(\2\2\u00d0\u00d1\7?\2\2\u00d1")
        buf.write("\62\3\2\2\2\u00d2\u00d3\7~\2\2\u00d3\u00d4\7?\2\2\u00d4")
        buf.write("\64\3\2\2\2\u00d5\u00d6\7`\2\2\u00d6\u00d7\7?\2\2\u00d7")
        buf.write("\66\3\2\2\2\u00d8\u00d9\7>\2\2\u00d9\u00da\7>\2\2\u00da")
        buf.write("\u00db\7?\2\2\u00db8\3\2\2\2\u00dc\u00dd\7@\2\2\u00dd")
        buf.write("\u00de\7@\2\2\u00de\u00df\7?\2\2\u00df:\3\2\2\2\u00e0")
        buf.write("\u00e1\7k\2\2\u00e1\u00e2\7h\2\2\u00e2<\3\2\2\2\u00e3")
        buf.write("\u00e4\7g\2\2\u00e4\u00e5\7n\2\2\u00e5\u00e6\7k\2\2\u00e6")
        buf.write("\u00e7\7h\2\2\u00e7>\3\2\2\2\u00e8\u00e9\7g\2\2\u00e9")
        buf.write("\u00ea\7n\2\2\u00ea\u00eb\7u\2\2\u00eb\u00ec\7g\2\2\u00ec")
        buf.write("@\3\2\2\2\u00ed\u00ee\7y\2\2\u00ee\u00ef\7j\2\2\u00ef")
        buf.write("\u00f0\7k\2\2\u00f0\u00f1\7n\2\2\u00f1\u00f2\7g\2\2\u00f2")
        buf.write("B\3\2\2\2\u00f3\u00f4\7h\2\2\u00f4\u00f5\7q\2\2\u00f5")
        buf.write("\u00f6\7t\2\2\u00f6D\3\2\2\2\u00f7\u00f8\7k\2\2\u00f8")
        buf.write("\u00f9\7p\2\2\u00f9F\3\2\2\2\u00fa\u00fb\7t\2\2\u00fb")
        buf.write("\u00fc\7g\2\2\u00fc\u00fd\7v\2\2\u00fd\u00fe\7w\2\2\u00fe")
        buf.write("\u00ff\7t\2\2\u00ff\u0100\7p\2\2\u0100H\3\2\2\2\u0101")
        buf.write("\u0102\7d\2\2\u0102\u0103\7t\2\2\u0103\u0104\7g\2\2\u0104")
        buf.write("\u0105\7c\2\2\u0105\u0106\7m\2\2\u0106J\3\2\2\2\u0107")
        buf.write("\u0108\7e\2\2\u0108\u0109\7q\2\2\u0109\u010a\7p\2\2\u010a")
        buf.write("\u010b\7v\2\2\u010b\u010c\7k\2\2\u010c\u010d\7p\2\2\u010d")
        buf.write("\u010e\7w\2\2\u010e\u010f\7g\2\2\u010fL\3\2\2\2\u0110")
        buf.write("\u0111\7?\2\2\u0111\u0112\7?\2\2\u0112N\3\2\2\2\u0113")
        buf.write("\u0114\7#\2\2\u0114\u0115\7?\2\2\u0115P\3\2\2\2\u0116")
        buf.write("\u0117\7>\2\2\u0117R\3\2\2\2\u0118\u0119\7@\2\2\u0119")
        buf.write("T\3\2\2\2\u011a\u011b\7@\2\2\u011b\u011c\7?\2\2\u011c")
        buf.write("V\3\2\2\2\u011d\u011e\7>\2\2\u011e\u011f\7?\2\2\u011f")
        buf.write("X\3\2\2\2\u0120\u0121\7-\2\2\u0121Z\3\2\2\2\u0122\u0123")
        buf.write("\7/\2\2\u0123\\\3\2\2\2\u0124\u0125\7~\2\2\u0125^\3\2")
        buf.write("\2\2\u0126\u0127\7`\2\2\u0127`\3\2\2\2\u0128\u0129\7,")
        buf.write("\2\2\u0129b\3\2\2\2\u012a\u012b\7\61\2\2\u012bd\3\2\2")
        buf.write("\2\u012c\u012d\7\'\2\2\u012df\3\2\2\2\u012e\u012f\7(\2")
        buf.write("\2\u012fh\3\2\2\2\u0130\u0131\7>\2\2\u0131\u0132\7>\2")
        buf.write("\2\u0132j\3\2\2\2\u0133\u0134\7@\2\2\u0134\u0135\7@\2")
        buf.write("\2\u0135l\3\2\2\2\u0136\u0137\7#\2\2\u0137n\3\2\2\2\u0138")
        buf.write("\u0139\7\60\2\2\u0139p\3\2\2\2\u013a\u013b\7v\2\2\u013b")
        buf.write("\u013c\7t\2\2\u013c\u013d\7w\2\2\u013d\u0144\7g\2\2\u013e")
        buf.write("\u013f\7h\2\2\u013f\u0140\7c\2\2\u0140\u0141\7n\2\2\u0141")
        buf.write("\u0142\7u\2\2\u0142\u0144\7g\2\2\u0143\u013a\3\2\2\2\u0143")
        buf.write("\u013e\3\2\2\2\u0144r\3\2\2\2\u0145\u0149\t\2\2\2\u0146")
        buf.write("\u0148\t\3\2\2\u0147\u0146\3\2\2\2\u0148\u014b\3\2\2\2")
        buf.write("\u0149\u0147\3\2\2\2\u0149\u014a\3\2\2\2\u014at\3\2\2")
        buf.write("\2\u014b\u0149\3\2\2\2\u014c\u014e\4\62;\2\u014d\u014c")
        buf.write("\3\2\2\2\u014e\u014f\3\2\2\2\u014f\u014d\3\2\2\2\u014f")
        buf.write("\u0150\3\2\2\2\u0150v\3\2\2\2\u0151\u0152\5y=\2\u0152")
        buf.write("\u0153\7$\2\2\u0153x\3\2\2\2\u0154\u015a\7$\2\2\u0155")
        buf.write("\u0159\n\4\2\2\u0156\u0157\7^\2\2\u0157\u0159\5{>\2\u0158")
        buf.write("\u0155\3\2\2\2\u0158\u0156\3\2\2\2\u0159\u015c\3\2\2\2")
        buf.write("\u015a\u0158\3\2\2\2\u015a\u015b\3\2\2\2\u015bz\3\2\2")
        buf.write("\2\u015c\u015a\3\2\2\2\u015d\u0173\t\5\2\2\u015e\u015f")
        buf.write("\7z\2\2\u015f\u0160\5}?\2\u0160\u0161\5}?\2\u0161\u0173")
        buf.write("\3\2\2\2\u0162\u0163\7w\2\2\u0163\u0164\5}?\2\u0164\u0165")
        buf.write("\5}?\2\u0165\u0166\5}?\2\u0166\u0167\5}?\2\u0167\u0173")
        buf.write("\3\2\2\2\u0168\u0169\7W\2\2\u0169\u016a\5}?\2\u016a\u016b")
        buf.write("\5}?\2\u016b\u016c\5}?\2\u016c\u016d\5}?\2\u016d\u016e")
        buf.write("\5}?\2\u016e\u016f\5}?\2\u016f\u0170\5}?\2\u0170\u0171")
        buf.write("\5}?\2\u0171\u0173\3\2\2\2\u0172\u015d\3\2\2\2\u0172\u015e")
        buf.write("\3\2\2\2\u0172\u0162\3\2\2\2\u0172\u0168\3\2\2\2\u0173")
        buf.write("|\3\2\2\2\u0174\u0175\t\6\2\2\u0175~\3\2\2\2\u0176\u0178")
        buf.write("\t\7\2\2\u0177\u0176\3\2\2\2\u0178\u0179\3\2\2\2\u0179")
        buf.write("\u0177\3\2\2\2\u0179\u017a\3\2\2\2\u017a\u017b\3\2\2\2")
        buf.write("\u017b\u017c\b@\2\2\u017c\u0080\3\2\2\2\n\2\u0143\u0149")
        buf.write("\u014f\u0158\u015a\u0172\u0179\3\2\3\2")
        return buf.getvalue()


class ZeamplLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]


    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    T__52 = 53
    T__53 = 54
    T__54 = 55
    BOOL = 56
    ID = 57
    INT = 58
    STRING = 59
    WS = 60

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'var'", "'='", "';'", "'func'", "'init'", "'('", "')'", "','", 
            "'ID'", "'type_expr'", "'class'", "'{'", "'}'", "'int'", "'bool'", 
            "'['", "']'", "'+='", "'-='", "'~='", "'*='", "'/='", "'%='", 
            "'&='", "'|='", "'^='", "'<<='", "'>>='", "'if'", "'elif'", 
            "'else'", "'while'", "'for'", "'in'", "'return'", "'break'", 
            "'continue'", "'=='", "'!='", "'<'", "'>'", "'>='", "'<='", 
            "'+'", "'-'", "'|'", "'^'", "'*'", "'/'", "'%'", "'&'", "'<<'", 
            "'>>'", "'!'", "'.'" ]

    symbolicNames = [ "<INVALID>",
            "BOOL", "ID", "INT", "STRING", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "T__52", "T__53", "T__54", "BOOL", "ID", 
                  "INT", "STRING", "UNTERMINATED_STRING", "ESCAPE", "HEX_DIGIT", 
                  "WS" ]

    grammarFileName = "Zeampl.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.5.3")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


