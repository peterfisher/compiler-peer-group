# Generated from /Users/npohilets/compiler-peer-group/zeampl/parser/Zeampl.g4 by ANTLR 4.5.3
from antlr4 import *
from io import StringIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2<")
        buf.write("\u016b\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3")
        buf.write("\4\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\b")
        buf.write("\3\b\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f")
        buf.write("\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20")
        buf.write("\3\20\3\21\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3\24")
        buf.write("\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27")
        buf.write("\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\33")
        buf.write("\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35")
        buf.write("\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37")
        buf.write("\3 \3 \3 \3 \3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3")
        buf.write("#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3$\3$\3%\3%\3%\3&\3")
        buf.write("&\3&\3\'\3\'\3(\3(\3)\3)\3)\3*\3*\3*\3+\3+\3,\3,\3-\3")
        buf.write("-\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63")
        buf.write("\3\63\3\64\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67\3\67")
        buf.write("\3\67\3\67\3\67\3\67\3\67\3\67\5\67\u0132\n\67\38\38\7")
        buf.write("8\u0136\n8\f8\168\u0139\138\39\69\u013c\n9\r9\169\u013d")
        buf.write("\3:\3:\3:\3;\3;\3;\3;\7;\u0147\n;\f;\16;\u014a\13;\3<")
        buf.write("\3<\3<\3<\3<\3<\3<\3<\3<\3<\3<\3<\3<\3<\3<\3<\3<\3<\3")
        buf.write("<\3<\3<\5<\u0161\n<\3=\3=\3>\6>\u0166\n>\r>\16>\u0167")
        buf.write("\3>\3>\2\2?\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25")
        buf.write("\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+")
        buf.write("\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E")
        buf.write("$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k")
        buf.write("\67m8o9q:s;u\2w\2y\2{<\3\2\b\5\2C\\aac|\6\2\62;C\\aac")
        buf.write("|\6\2\f\f\17\17$$^^\13\2$$))^^cdhhppttvvxx\5\2\62;CHc")
        buf.write("h\4\2\13\f\"\"\u0170\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2")
        buf.write("\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2")
        buf.write("\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31")
        buf.write("\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2")
        buf.write("\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3")
        buf.write("\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2")
        buf.write("\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3")
        buf.write("\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G")
        buf.write("\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2")
        buf.write("Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2")
        buf.write("\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2")
        buf.write("\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2")
        buf.write("\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2{\3\2\2\2\3}\3")
        buf.write("\2\2\2\5\u0081\3\2\2\2\7\u0083\3\2\2\2\t\u0085\3\2\2\2")
        buf.write("\13\u008a\3\2\2\2\r\u008f\3\2\2\2\17\u0091\3\2\2\2\21")
        buf.write("\u0093\3\2\2\2\23\u0095\3\2\2\2\25\u0098\3\2\2\2\27\u009d")
        buf.write("\3\2\2\2\31\u00a3\3\2\2\2\33\u00a5\3\2\2\2\35\u00a7\3")
        buf.write("\2\2\2\37\u00a9\3\2\2\2!\u00ab\3\2\2\2#\u00ae\3\2\2\2")
        buf.write("%\u00b1\3\2\2\2\'\u00b4\3\2\2\2)\u00b7\3\2\2\2+\u00ba")
        buf.write("\3\2\2\2-\u00bd\3\2\2\2/\u00c0\3\2\2\2\61\u00c3\3\2\2")
        buf.write("\2\63\u00c6\3\2\2\2\65\u00ca\3\2\2\2\67\u00ce\3\2\2\2")
        buf.write("9\u00d1\3\2\2\2;\u00d6\3\2\2\2=\u00db\3\2\2\2?\u00e1\3")
        buf.write("\2\2\2A\u00e5\3\2\2\2C\u00e8\3\2\2\2E\u00ef\3\2\2\2G\u00f5")
        buf.write("\3\2\2\2I\u00fe\3\2\2\2K\u0101\3\2\2\2M\u0104\3\2\2\2")
        buf.write("O\u0106\3\2\2\2Q\u0108\3\2\2\2S\u010b\3\2\2\2U\u010e\3")
        buf.write("\2\2\2W\u0110\3\2\2\2Y\u0112\3\2\2\2[\u0114\3\2\2\2]\u0116")
        buf.write("\3\2\2\2_\u0118\3\2\2\2a\u011a\3\2\2\2c\u011c\3\2\2\2")
        buf.write("e\u011e\3\2\2\2g\u0121\3\2\2\2i\u0124\3\2\2\2k\u0126\3")
        buf.write("\2\2\2m\u0131\3\2\2\2o\u0133\3\2\2\2q\u013b\3\2\2\2s\u013f")
        buf.write("\3\2\2\2u\u0142\3\2\2\2w\u0160\3\2\2\2y\u0162\3\2\2\2")
        buf.write("{\u0165\3\2\2\2}~\7x\2\2~\177\7c\2\2\177\u0080\7t\2\2")
        buf.write("\u0080\4\3\2\2\2\u0081\u0082\7?\2\2\u0082\6\3\2\2\2\u0083")
        buf.write("\u0084\7=\2\2\u0084\b\3\2\2\2\u0085\u0086\7h\2\2\u0086")
        buf.write("\u0087\7w\2\2\u0087\u0088\7p\2\2\u0088\u0089\7e\2\2\u0089")
        buf.write("\n\3\2\2\2\u008a\u008b\7k\2\2\u008b\u008c\7p\2\2\u008c")
        buf.write("\u008d\7k\2\2\u008d\u008e\7v\2\2\u008e\f\3\2\2\2\u008f")
        buf.write("\u0090\7*\2\2\u0090\16\3\2\2\2\u0091\u0092\7+\2\2\u0092")
        buf.write("\20\3\2\2\2\u0093\u0094\7.\2\2\u0094\22\3\2\2\2\u0095")
        buf.write("\u0096\7K\2\2\u0096\u0097\7F\2\2\u0097\24\3\2\2\2\u0098")
        buf.write("\u0099\7v\2\2\u0099\u009a\7{\2\2\u009a\u009b\7r\2\2\u009b")
        buf.write("\u009c\7g\2\2\u009c\26\3\2\2\2\u009d\u009e\7e\2\2\u009e")
        buf.write("\u009f\7n\2\2\u009f\u00a0\7c\2\2\u00a0\u00a1\7u\2\2\u00a1")
        buf.write("\u00a2\7u\2\2\u00a2\30\3\2\2\2\u00a3\u00a4\7}\2\2\u00a4")
        buf.write("\32\3\2\2\2\u00a5\u00a6\7\177\2\2\u00a6\34\3\2\2\2\u00a7")
        buf.write("\u00a8\7]\2\2\u00a8\36\3\2\2\2\u00a9\u00aa\7_\2\2\u00aa")
        buf.write(" \3\2\2\2\u00ab\u00ac\7-\2\2\u00ac\u00ad\7?\2\2\u00ad")
        buf.write("\"\3\2\2\2\u00ae\u00af\7/\2\2\u00af\u00b0\7?\2\2\u00b0")
        buf.write("$\3\2\2\2\u00b1\u00b2\7\u0080\2\2\u00b2\u00b3\7?\2\2\u00b3")
        buf.write("&\3\2\2\2\u00b4\u00b5\7,\2\2\u00b5\u00b6\7?\2\2\u00b6")
        buf.write("(\3\2\2\2\u00b7\u00b8\7\61\2\2\u00b8\u00b9\7?\2\2\u00b9")
        buf.write("*\3\2\2\2\u00ba\u00bb\7\'\2\2\u00bb\u00bc\7?\2\2\u00bc")
        buf.write(",\3\2\2\2\u00bd\u00be\7(\2\2\u00be\u00bf\7?\2\2\u00bf")
        buf.write(".\3\2\2\2\u00c0\u00c1\7~\2\2\u00c1\u00c2\7?\2\2\u00c2")
        buf.write("\60\3\2\2\2\u00c3\u00c4\7`\2\2\u00c4\u00c5\7?\2\2\u00c5")
        buf.write("\62\3\2\2\2\u00c6\u00c7\7>\2\2\u00c7\u00c8\7>\2\2\u00c8")
        buf.write("\u00c9\7?\2\2\u00c9\64\3\2\2\2\u00ca\u00cb\7@\2\2\u00cb")
        buf.write("\u00cc\7@\2\2\u00cc\u00cd\7?\2\2\u00cd\66\3\2\2\2\u00ce")
        buf.write("\u00cf\7k\2\2\u00cf\u00d0\7h\2\2\u00d08\3\2\2\2\u00d1")
        buf.write("\u00d2\7g\2\2\u00d2\u00d3\7n\2\2\u00d3\u00d4\7k\2\2\u00d4")
        buf.write("\u00d5\7h\2\2\u00d5:\3\2\2\2\u00d6\u00d7\7g\2\2\u00d7")
        buf.write("\u00d8\7n\2\2\u00d8\u00d9\7u\2\2\u00d9\u00da\7g\2\2\u00da")
        buf.write("<\3\2\2\2\u00db\u00dc\7y\2\2\u00dc\u00dd\7j\2\2\u00dd")
        buf.write("\u00de\7k\2\2\u00de\u00df\7n\2\2\u00df\u00e0\7g\2\2\u00e0")
        buf.write(">\3\2\2\2\u00e1\u00e2\7h\2\2\u00e2\u00e3\7q\2\2\u00e3")
        buf.write("\u00e4\7t\2\2\u00e4@\3\2\2\2\u00e5\u00e6\7k\2\2\u00e6")
        buf.write("\u00e7\7p\2\2\u00e7B\3\2\2\2\u00e8\u00e9\7t\2\2\u00e9")
        buf.write("\u00ea\7g\2\2\u00ea\u00eb\7v\2\2\u00eb\u00ec\7w\2\2\u00ec")
        buf.write("\u00ed\7t\2\2\u00ed\u00ee\7p\2\2\u00eeD\3\2\2\2\u00ef")
        buf.write("\u00f0\7d\2\2\u00f0\u00f1\7t\2\2\u00f1\u00f2\7g\2\2\u00f2")
        buf.write("\u00f3\7c\2\2\u00f3\u00f4\7m\2\2\u00f4F\3\2\2\2\u00f5")
        buf.write("\u00f6\7e\2\2\u00f6\u00f7\7q\2\2\u00f7\u00f8\7p\2\2\u00f8")
        buf.write("\u00f9\7v\2\2\u00f9\u00fa\7k\2\2\u00fa\u00fb\7p\2\2\u00fb")
        buf.write("\u00fc\7w\2\2\u00fc\u00fd\7g\2\2\u00fdH\3\2\2\2\u00fe")
        buf.write("\u00ff\7?\2\2\u00ff\u0100\7?\2\2\u0100J\3\2\2\2\u0101")
        buf.write("\u0102\7#\2\2\u0102\u0103\7?\2\2\u0103L\3\2\2\2\u0104")
        buf.write("\u0105\7>\2\2\u0105N\3\2\2\2\u0106\u0107\7@\2\2\u0107")
        buf.write("P\3\2\2\2\u0108\u0109\7@\2\2\u0109\u010a\7?\2\2\u010a")
        buf.write("R\3\2\2\2\u010b\u010c\7>\2\2\u010c\u010d\7?\2\2\u010d")
        buf.write("T\3\2\2\2\u010e\u010f\7-\2\2\u010fV\3\2\2\2\u0110\u0111")
        buf.write("\7/\2\2\u0111X\3\2\2\2\u0112\u0113\7~\2\2\u0113Z\3\2\2")
        buf.write("\2\u0114\u0115\7`\2\2\u0115\\\3\2\2\2\u0116\u0117\7,\2")
        buf.write("\2\u0117^\3\2\2\2\u0118\u0119\7\61\2\2\u0119`\3\2\2\2")
        buf.write("\u011a\u011b\7\'\2\2\u011bb\3\2\2\2\u011c\u011d\7(\2\2")
        buf.write("\u011dd\3\2\2\2\u011e\u011f\7>\2\2\u011f\u0120\7>\2\2")
        buf.write("\u0120f\3\2\2\2\u0121\u0122\7@\2\2\u0122\u0123\7@\2\2")
        buf.write("\u0123h\3\2\2\2\u0124\u0125\7#\2\2\u0125j\3\2\2\2\u0126")
        buf.write("\u0127\7\60\2\2\u0127l\3\2\2\2\u0128\u0129\7v\2\2\u0129")
        buf.write("\u012a\7t\2\2\u012a\u012b\7w\2\2\u012b\u0132\7g\2\2\u012c")
        buf.write("\u012d\7h\2\2\u012d\u012e\7c\2\2\u012e\u012f\7n\2\2\u012f")
        buf.write("\u0130\7u\2\2\u0130\u0132\7g\2\2\u0131\u0128\3\2\2\2\u0131")
        buf.write("\u012c\3\2\2\2\u0132n\3\2\2\2\u0133\u0137\t\2\2\2\u0134")
        buf.write("\u0136\t\3\2\2\u0135\u0134\3\2\2\2\u0136\u0139\3\2\2\2")
        buf.write("\u0137\u0135\3\2\2\2\u0137\u0138\3\2\2\2\u0138p\3\2\2")
        buf.write("\2\u0139\u0137\3\2\2\2\u013a\u013c\4\62;\2\u013b\u013a")
        buf.write("\3\2\2\2\u013c\u013d\3\2\2\2\u013d\u013b\3\2\2\2\u013d")
        buf.write("\u013e\3\2\2\2\u013er\3\2\2\2\u013f\u0140\5u;\2\u0140")
        buf.write("\u0141\7$\2\2\u0141t\3\2\2\2\u0142\u0148\7$\2\2\u0143")
        buf.write("\u0147\n\4\2\2\u0144\u0145\7^\2\2\u0145\u0147\5w<\2\u0146")
        buf.write("\u0143\3\2\2\2\u0146\u0144\3\2\2\2\u0147\u014a\3\2\2\2")
        buf.write("\u0148\u0146\3\2\2\2\u0148\u0149\3\2\2\2\u0149v\3\2\2")
        buf.write("\2\u014a\u0148\3\2\2\2\u014b\u0161\t\5\2\2\u014c\u014d")
        buf.write("\7z\2\2\u014d\u014e\5y=\2\u014e\u014f\5y=\2\u014f\u0161")
        buf.write("\3\2\2\2\u0150\u0151\7w\2\2\u0151\u0152\5y=\2\u0152\u0153")
        buf.write("\5y=\2\u0153\u0154\5y=\2\u0154\u0155\5y=\2\u0155\u0161")
        buf.write("\3\2\2\2\u0156\u0157\7W\2\2\u0157\u0158\5y=\2\u0158\u0159")
        buf.write("\5y=\2\u0159\u015a\5y=\2\u015a\u015b\5y=\2\u015b\u015c")
        buf.write("\5y=\2\u015c\u015d\5y=\2\u015d\u015e\5y=\2\u015e\u015f")
        buf.write("\5y=\2\u015f\u0161\3\2\2\2\u0160\u014b\3\2\2\2\u0160\u014c")
        buf.write("\3\2\2\2\u0160\u0150\3\2\2\2\u0160\u0156\3\2\2\2\u0161")
        buf.write("x\3\2\2\2\u0162\u0163\t\6\2\2\u0163z\3\2\2\2\u0164\u0166")
        buf.write("\t\7\2\2\u0165\u0164\3\2\2\2\u0166\u0167\3\2\2\2\u0167")
        buf.write("\u0165\3\2\2\2\u0167\u0168\3\2\2\2\u0168\u0169\3\2\2\2")
        buf.write("\u0169\u016a\b>\2\2\u016a|\3\2\2\2\n\2\u0131\u0137\u013d")
        buf.write("\u0146\u0148\u0160\u0167\3\2\3\2")
        return buf.getvalue()


class ZeamplLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]


    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    T__52 = 53
    BOOL = 54
    ID = 55
    INT = 56
    STRING = 57
    WS = 58

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'var'", "'='", "';'", "'func'", "'init'", "'('", "')'", "','", 
            "'ID'", "'type'", "'class'", "'{'", "'}'", "'['", "']'", "'+='", 
            "'-='", "'~='", "'*='", "'/='", "'%='", "'&='", "'|='", "'^='", 
            "'<<='", "'>>='", "'if'", "'elif'", "'else'", "'while'", "'for'", 
            "'in'", "'return'", "'break'", "'continue'", "'=='", "'!='", 
            "'<'", "'>'", "'>='", "'<='", "'+'", "'-'", "'|'", "'^'", "'*'", 
            "'/'", "'%'", "'&'", "'<<'", "'>>'", "'!'", "'.'" ]

    symbolicNames = [ "<INVALID>",
            "BOOL", "ID", "INT", "STRING", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "T__52", "BOOL", "ID", "INT", "STRING", 
                  "UNTERMINATED_STRING", "ESCAPE", "HEX_DIGIT", "WS" ]

    grammarFileName = "Zeampl.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.5.3")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


